stevehu@gmail.comnet.lightapi.portal.user.UserCreatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":1},"host":"lightapi.net","email":"stevehu@gmail.com","userId":"stevehu","language":"en","password":"1000:5b2d38332c202d34352c202d3130372c2035372c2031362c203130382c203130352c202d37312c202d3130392c202d3130382c2035332c202d3131312c203132302c202d362c2036322c2036365d:f97edead978848cfccab016c80bad88a38b1a4e95576e97509664d98de27638af7f275b963a81bf6673950d51a809c556a75bbadef54067ba55bea3f63b66be9","value":"{\"firstName\":\"Steve\",\"lastName\":\"Hu\",\"gender\":\"M\"}","taijiWallet":null,"country":"CAN","province":"ON","city":"Peel","verified":false,"token":"ccc0ddce-55e1-4db3-9895-b5c8e659226e","roles":"user lightapi.net admin","locked":false,"timestamp":1588991348537}
stevehu@gmail.comnet.lightapi.portal.user.UserConfirmedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":2},"token":"ccc0ddce-55e1-4db3-9895-b5c8e659226e","timestamp":1588991413910}
f7d42348-c647-4efb-a52d-4c5787421e71net.lightapi.portal.market.MarketClientCreatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":3,"derived":false},"keyId":0,"host":"lightapi.net","clientId":"f7d42348-c647-4efb-a52d-4c5787421e71","value":"{\"clientType\":\"trusted\",\"clientProfile\":\"browser\",\"host\":\"lightapi.net\",\"lob\":\"any\",\"clientName\":\"Light Maproot Test Web Application\",\"clientDesc\":\"Light Maproot React Single Page Application\",\"scope\":\"portal.r portal.w\",\"redirectUri\":\"https://dev.maproot.net/authorization\",\"authenticateClass\":\"com.networknt.oauth.auth.LightPortalAuth\",\"clientId\":\"f7d42348-c647-4efb-a52d-4c5787421e71\",\"clientSecret\":\"1000:5b37332c202d36362c202d36392c203131362c203132362c2036322c2037382c20342c202d37382c202d3131352c202d35332c202d34352c202d342c202d3132322c203130322c2033325d:29ad1fe88d66584c4d279a6f58277858298dbf9270ffc0de4317a4d38ba4b41f35f122e0825c466f2fa14d91e17ba82b1a2f2a37877a2830fae2973076d93cc2\"}","timestamp":1596988696365}
f7d42348-c647-4efb-a52d-4c5787421e72net.lightapi.portal.market.MarketClientCreatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":3,"derived":false},"keyId":0,"host":"lightapi.net","clientId":"f7d42348-c647-4efb-a52d-4c5787421e72","value":"{\"clientType\":\"trusted\",\"clientProfile\":\"browser\",\"host\":\"lightapi.net\",\"lob\":\"any\",\"clientName\":\"Light Portal Local Web Application\",\"clientDesc\":\"Light Portal Local React Single Page Application\",\"scope\":\"portal.r portal.w\",\"redirectUri\":\"https://localhost:3000/authorization\",\"authenticateClass\":\"com.networknt.oauth.auth.LightPortalAuth\",\"clientId\":\"f7d42348-c647-4efb-a52d-4c5787421e72\",\"clientSecret\":\"1000:5b37332c202d36362c202d36392c203131362c203132362c2036322c2037382c20342c202d37382c202d3131352c202d35332c202d34352c202d342c202d3132322c203130322c2033325d:29ad1fe88d66584c4d279a6f58277858298dbf9270ffc0de4317a4d38ba4b41f35f122e0825c466f2fa14d91e17ba82b1a2f2a37877a2830fae2973076d93cc2\"}","timestamp":1596988696365}
f7d42348-c647-4efb-a52d-4c5787421e73net.lightapi.portal.market.MarketClientCreatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":3,"derived":false},"keyId":0,"host":"lightapi.net","clientId":"f7d42348-c647-4efb-a52d-4c5787421e73","value":"{\"clientType\":\"trusted\",\"clientProfile\":\"browser\",\"host\":\"lightapi.net\",\"lob\":\"any\",\"clientName\":\"Light Portal Test Web Application\",\"clientDesc\":\"Light Portal Test React Single Page Application\",\"scope\":\"portal.r portal.w\",\"redirectUri\":\"https://dev.lightapi.net/authorization\",\"authenticateClass\":\"com.networknt.oauth.auth.LightPortalAuth\",\"clientId\":\"f7d42348-c647-4efb-a52d-4c5787421e73\",\"clientSecret\":\"1000:5b37332c202d36362c202d36392c203131362c203132362c2036322c2037382c20342c202d37382c202d3131352c202d35332c202d34352c202d342c202d3132322c203130322c2033325d:29ad1fe88d66584c4d279a6f58277858298dbf9270ffc0de4317a4d38ba4b41f35f122e0825c466f2fa14d91e17ba82b1a2f2a37877a2830fae2973076d93cc2\"}","timestamp":1596988696365}
f7d42348-c647-4efb-a52d-4c5787421e74net.lightapi.portal.market.MarketClientCreatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":4,"derived":false},"keyId":0,"host":"lightapi.net","clientId":"f7d42348-c647-4efb-a52d-4c5787421e74","value":"{\"clientType\":\"external\",\"clientProfile\":\"browser\",\"host\":\"lightapi.net\",\"lob\":\"any\",\"clientName\":\"Light Portal External Web Application\",\"clientDesc\":\"Light Portal React Single Page Application\",\"scope\":\"portal.r portal.w\",\"redirectUri\":\"https://localhost:3000/authorization\",\"authenticateClass\":\"com.networknt.oauth.auth.LightPortalAuth\",\"clientId\":\"f7d42348-c647-4efb-a52d-4c5787421e74\",\"clientSecret\":\"1000:5b37332c202d36362c202d36392c203131362c203132362c2036322c2037382c20342c202d37382c202d3131352c202d35332c202d34352c202d342c202d3132322c203130322c2033325d:29ad1fe88d66584c4d279a6f58277858298dbf9270ffc0de4317a4d38ba4b41f35f122e0825c466f2fa14d91e17ba82b1a2f2a37877a2830fae2973076d93cc2\"}","timestamp":1596988696365}
f7d42348-c647-4efb-a52d-4c5787421e75net.lightapi.portal.market.MarketClientCreatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":5,"derived":false},"keyId":0,"host":"lightapi.net","clientId":"f7d42348-c647-4efb-a52d-4c5787421e75","value":"{\"clientType\":\"trusted\",\"clientProfile\":\"browser\",\"host\":\"lightapi.net\",\"lob\":\"any\",\"clientName\":\"Light Portal Deref Web Application\",\"clientDesc\":\"Light Portal React Single Page Application\",\"scope\":\"portal.r portal.w\",\"redirectUri\":\"https://localhost:3000/authorization\",\"authenticateClass\":\"com.networknt.oauth.auth.LightPortalAuth\",\"clientId\":\"f7d42348-c647-4efb-a52d-4c5787421e75\",\"derefClientId\":\"f7d42348-c647-4efb-a52d-4c5787421e73\",\"clientSecret\":\"1000:5b37332c202d36362c202d36392c203131362c203132362c2036322c2037382c20342c202d37382c202d3131352c202d35332c202d34352c202d342c202d3132322c203130322c2033325d:29ad1fe88d66584c4d279a6f58277858298dbf9270ffc0de4317a4d38ba4b41f35f122e0825c466f2fa14d91e17ba82b1a2f2a37877a2830fae2973076d93cc2\"}","timestamp":1596988696365}
lightapi.net|controller-register-accessnet.lightapi.portal.market.RuleCreatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":22,"derived":false},"keyId":0,"host":"lightapi.net","ruleId":"controller-register-access","ruleType":"request-access","groupId":null,"visibility":"public","desc":"Allow client credentials token with sid as customized claim. The sid should match the request body serviceId. The register will only accept cc token. It means that only the a running service can register itself. This endpoint shouldn't be called by the portal view at all.","value":"controller-register-access:\n  ruleId: controller-register-access\n  host: lightapi.net\n  ruleType: request-access\n  visibility: public\n  description: Allow client credentials token with sid as customized claim. The sid should match the request body serviceId. The register will only accept cc token. It means that only the a running service can register itself. This endpoint shouldn't be called by the portal view at all.\n  conditions:\n    - conditionId: allow-cc\n      propertyPath: auditInfo.subject_claims.ClaimsMap.user_id\n      operatorCode: NIL\n      joinCode: AND\n      index: 1\n    - conditionId: has-sid\n      propertyPath: auditInfo.subject_claims.ClaimsMap.sid\n      operatorCode: NNIL\n      joinCode: AND\n      index: 2\n    - conditionId: has-sid-match-body\n      propertyPath: auditInfo.subject_claims.ClaimsMap.sid\n      operatorCode: EQ\n      joinCode: AND\n      index: 3\n      conditionValues:\n        - conditionValueId: body-serviceId\n          expression: true\n          conditionValue: requestBody.serviceId\n  actions:\n    - actionId: match-role\n      actionClassName: com.networknt.rule.FineGrainedAuthAction\n      actionValues:\n        - actionValueId: roles\n          value: $roles\n","owner":"stevehu","timestamp":1644783537922}
lightapi.net|controller-deregister-accessnet.lightapi.portal.market.RuleCreatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":23,"derived":false},"keyId":0,"host":"lightapi.net","ruleId":"controller-deregister-access","ruleType":"request-access","groupId":null,"visibility":"public","desc":"Allow client credentail token access with sid as customized claim. The sid should match the query parameter serviceId and only cc token is allowed to access. It means that only the a running service can register itself. This endpoint shouldn't be called by the portal view at all.","value":"controller-deregister-access:\n  ruleId: controller-deregister-access\n  host: lightapi.net\n  ruleType: request-access\n  visibility: public\n  description: Allow client credentail token access with sid as customized claim. The sid should match the query parameter serviceId and only cc token is allowed to access. It means that only the a running service can register itself. This endpoint shouldn't be called by the portal view at all.\n  conditions:\n    - conditionId: allow-cc\n      propertyPath: auditInfo.subject_claims.ClaimsMap.user_id\n      operatorCode: NIL\n      joinCode: AND\n      index: 1\n    - conditionId: has-sid\n      propertyPath: auditInfo.subject_claims.ClaimsMap.sid\n      operatorCode: NNIL\n      joinCode: AND\n      index: 2\n    - conditionId: has-sid-match-query\n      propertyPath: auditInfo.subject_claims.ClaimsMap.sid\n      operatorCode: EQ\n      joinCode: AND\n      index: 3\n      conditionValues:\n        - conditionValueId: query-serviceId\n          expression: true\n          conditionValue: queryParameters.serviceId.First\n  actions:\n    - actionId: match-role\n      actionClassName: com.networknt.rule.FineGrainedAuthAction\n      actionValues:\n        - actionValueId: roles\n          value: $roles\n","owner":"stevehu","timestamp":1644783592983}
lightapi.net|portal-role-accessnet.lightapi.portal.market.RuleCreatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":111,"derived":false},"keyId":0,"host":"lightapi.net","ruleId":"portal-role-access","ruleType":"request-access","groupId":null,"visibility":"public","desc":"Rule-based authorization for portal service and allow certain roles to access certain endpoints. For AD integration, it transform the group to role. This is for the portal services like controller and config server access from the protal-view.","value":"portal-role-access:\n  ruleId: portal-role-access\n  host: lightapi.net\n  ruleType: request-access\n  visibility: public\n  description: Rule-based authorization for portal service and allow certain roles to access certain endpoints. For AD integration, it transforms the group into a role. This is for the portal services like controller and config server access from the portal view.\n  conditions:\n    - conditionId: allow-role-jwt\n      propertyPath: auditInfo.subject_claims.ClaimsMap.roles\n      operatorCode: NNIL\n      joinCode: OR\n      index: 1\n  actions:\n    - actionId: match-role\n      actionClassName: com.networknt.rule.FineGrainedAuthAction\n      actionValues:\n        - actionValueId: roles\n          value: $roles\n","owner":"stevehu","timestamp":1645069891645}
com.networknt.controller-1.0.0net.lightapi.portal.market.MarketServiceCreatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":19,"derived":false},"keyId":0,"host":"lightapi.net","style":"openapi","serviceId":"com.networknt.controller-1.0.0","value":"{\"style\":\"openapi\",\"status\":\"published\",\"tags\":[\"openapi\",\"controller\",\"control plane\"],\"host\":\"lightapi.net\",\"lob\":\"portal\",\"serviceId\":\"com.networknt.controller-1.0.0\",\"name\":\"controller\",\"desc\":\"Light portal control plane service\"}","timestamp":1644782880349}
com.networknt.controller-1.0.0net.lightapi.portal.market.ServiceSpecUpdatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":20,"derived":false},"keyId":0,"host":"lightapi.net","style":"openapi","serviceId":"com.networknt.controller-1.0.0","spec":"---\nopenapi: \"3.0.2\"\ninfo:\n  title: \"Control Panel - OpenAPI 3.0\"\n  description: \"All light-4j services can register here during startup and deregister\\\n    \\ during the shutdown. It ensures that the control panel has a snapshot of running\\\n    \\ services all the time. The control panel also sends health check requests to\\\n    \\ each service continuously to ensure its healthy and server info request to assist\\\n    \\ the service certification. With the information above, this service can serve\\\n    \\ as a global discovery for service to service invocations.\"\n  termsOfService: \"http://swagger.io/terms/\"\n  contact:\n    email: \"stevehu@gmail.com\"\n  license:\n    name: \"Apache 2.0\"\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n  version: \"1.0.0\"\nservers:\n- url: \"https://lightapi.net\"\npaths:\n  /services:\n    post:\n      summary: \"Add a new service with opitonal health checks\"\n      description: \"Register a service during its startup\"\n      operationId: \"register\"\n      requestBody:\n        description: \"Register a service with optional health checks\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Service\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n        \"400\":\n          description: \"Invalid Service Register Request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    delete:\n      summary: \"Remove a service and its health checks from the registry\"\n      description: \"Deregister a service during its shutdown\"\n      operationId: \"deregister\"\n      parameters:\n      - name: \"serviceId\"\n        in: \"query\"\n        description: \"ID of the service\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"tag\"\n        in: \"query\"\n        description: \"Return only nodes with the tag\"\n        required: false\n        schema:\n          type: \"string\"\n      - name: \"protocol\"\n        in: \"query\"\n        description: \"Return only nodes with the prototol\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"address\"\n        in: \"query\"\n        description: \"IP address of the node\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"port\"\n        in: \"query\"\n        description: \"Port number of the node\"\n        required: true\n        schema:\n          type: \"integer\"\n      - name: \"checkInterval\"\n        in: \"query\"\n        description: \"Check interval from the portal-registry configuration.\"\n        required: true\n        schema:\n          type: \"integer\"\n      responses:\n        \"200\":\n          description: \"Successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n        \"400\":\n          description: \"Invalid Service Register Request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    get:\n      summary: \"Query all healthy services\"\n      description: \"Returns a list of services\"\n      operationId: \"getHealthService\"\n      responses:\n        \"200\":\n          description: \"successful operation\"\n        \"400\":\n          description: \"Invalid request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n        \"404\":\n          description: \"Service not found\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /services/lookup:\n    get:\n      summary: \"Discover service with serviceId and optional tag\"\n      description: \"Returns a list of nodes for the service\"\n      operationId: \"getLookupService\"\n      parameters:\n      - name: \"serviceId\"\n        in: \"query\"\n        description: \"ID of the service\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"tag\"\n        in: \"query\"\n        description: \"Return only nodes with the tag\"\n        required: false\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"successful operation\"\n        \"400\":\n          description: \"Invalid request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n        \"404\":\n          description: \"Service not found\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /services/chaosmonkey/assault:\n    post:\n      summary: \"Initiate a specfic chaosmonkey test\"\n      operationId: \"postChaosMonkeyAssault\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AssaultInitPost\"\n      responses:\n        \"200\":\n          description: \"successful operation\"\n        \"400\":\n          description: \"Invalid request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /services/chaosmonkey:\n    post:\n      summary: \"Configure chaos monkey handlers for a specific service\"\n      operationId: \"postChaosMonkey\"\n      requestBody:\n        description: \"settings for chaos monkey\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChaosMonkeyAssaultConfigPost\"\n      responses:\n        \"200\":\n          description: \"successful operation\"\n        \"400\":\n          description: \"Invalid request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    get:\n      summary: \"Get chaosmonkey handlers and their configurations on a specific service\"\n      operationId: \"getChaosMonkey\"\n      parameters:\n      - name: \"address\"\n        in: \"query\"\n        description: \"get info on a specific address\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"protocol\"\n        in: \"query\"\n        description: \"get info on a specific protocol\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"port\"\n        in: \"query\"\n        description: \"get info on a specific port\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"successful operation\"\n        \"400\":\n          description: \"Invalid request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n        \"404\":\n          description: \"Service not found\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n  /services/check:\n    get:\n      summary: \"Retrieve all health check statuses from the cluster\"\n      description: \"Get the live check statuses\"\n      operationId: \"getHealthChecks\"\n      parameters:\n      - name: \"local\"\n        in: \"query\"\n        description: \"Only return the local node health checks if it is true\"\n        required: false\n        schema:\n          type: \"boolean\"\n      - name: \"stale\"\n        in: \"query\"\n        description: \"Only return the stale health checks if it is true\"\n        required: false\n        schema:\n          type: \"boolean\"\n      responses:\n        \"200\":\n          description: \"Successful operation\"\n        \"400\":\n          description: \"Invalid Health Check Request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    put:\n      summary: \"TTL type check to set the status of the check to pass or fail\"\n      description: \"TTL check to from the service for pass or not\"\n      operationId: \"checkStatus\"\n      requestBody:\n        description: \"TTL check to notify if the service is pass or not\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CheckStatus\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n        \"400\":\n          description: \"Invalid Service Register Request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /services/check/{id}:\n    get:\n      summary: \"Retrieve the current check status for a check id\"\n      description: \"Get the live check status for the node\"\n      operationId: \"getCheckStatus\"\n      parameters:\n      - name: \"id\"\n        in: \"path\"\n        description: \"id of the check object in format serviceId|tag:address:port\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"Successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Check\"\n        \"400\":\n          description: \"Invalid Service Register Request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /services/info:\n    get:\n      summary: \"Query service info by node of address and port\"\n      description: \"Returns a service info object\"\n      operationId: \"getServiceInfo\"\n      parameters:\n      - name: \"address\"\n        in: \"query\"\n        description: \"get info on a specific address\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"protocol\"\n        in: \"query\"\n        description: \"get info on a specific protocol\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"port\"\n        in: \"query\"\n        description: \"get info on a specific port\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"successful operation\"\n        \"400\":\n          description: \"Invalid request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n        \"404\":\n          description: \"Service not found\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /services/logger/content:\n    post:\n      summary: \"Query the contents of a log file.\"\n      description: \"Returns a JSON body of log entries\"\n      operationId: \"postServiceLoggerContent\"\n      requestBody:\n        description: \"Log Retrieval Search.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LogRetrieval\"\n      responses:\n        \"200\":\n          description: \"successful operation\"\n        \"400\":\n          description: \"Invalid request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n        \"404\":\n          description: \"Service not found\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /services/logger:\n    get:\n      summary: \"Query logger for a particular instance\"\n      description: \"Returns a list of loggers with logging levels\"\n      operationId: \"getServiceLogger\"\n      parameters:\n      - name: \"protocol\"\n        in: \"query\"\n        description: \"target server protocol, http or https.\"\n        required: true\n        schema:\n          type: \"string\"\n          enum:\n          - \"http\"\n          - \"https\"\n      - name: \"address\"\n        in: \"query\"\n        description: \"target server address.\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"port\"\n        in: \"query\"\n        description: \"target server port number.\"\n        required: true\n        schema:\n          type: \"integer\"\n      responses:\n        \"200\":\n          description: \"successful operation\"\n        \"400\":\n          description: \"Invalid request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n        \"404\":\n          description: \"Service not found\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    post:\n      summary: \"Update the logging level for a particular instance\"\n      description: \"Returns a list of loggers with logging levels after updated.\"\n      operationId: \"postServiceLogger\"\n      requestBody:\n        description: \"Service that is updating loggers.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LoggerConfig\"\n      responses:\n        \"200\":\n          description: \"successful operation\"\n        \"400\":\n          description: \"Invalid request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n        \"404\":\n          description: \"Service not found\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\ncomponents:\n  schemas:\n    AssaultType:\n      type: \"string\"\n      enum:\n      - \"com.networknt.chaos.ExceptionAssaultHandler\"\n      - \"com.networknt.chaos.KillappAssaultHandler\"\n      - \"com.networknt.chaos.LatencyAssaultHandler\"\n      - \"com.networknt.chaos.MemoryAssaultHandler\"\n    AssaultInitPost:\n      type: \"object\"\n      properties:\n        address:\n          type: \"string\"\n        protocol:\n          type: \"string\"\n        port:\n          type: \"integer\"\n        assaultType:\n          $ref: \"#/components/schemas/AssaultType\"\n    ChaosMonkeyAssaultConfigPost:\n      type: \"object\"\n      properties:\n        address:\n          type: \"string\"\n        protocol:\n          type: \"string\"\n        port:\n          type: \"integer\"\n        assaultType:\n          $ref: \"#/components/schemas/AssaultType\"\n        assaultConfig:\n          type: \"object\"\n          additionalProperties: true\n    MemoryAssault:\n      type: \"object\"\n      properties:\n        enabled:\n          type: \"boolean\"\n        bypass:\n          type: \"boolean\"\n        level:\n          type: \"integer\"\n          minimum: 1\n        memoryMillisecondsHoldFilledMemory:\n          type: \"integer\"\n          minimum: 1500\n        memoryMillisecondsWaitFilledMemory:\n          type: \"integer\"\n          minimum: 100\n          maximum: 30000\n        memoryFillIncrementFraction:\n          type: \"number\"\n          minimum: 0.1\n          maximum: 1.0\n        memoryFillTargetFraction:\n          type: \"number\"\n          minimum: 0.01\n          maximum: 0.95\n    LatencyAssault:\n      type: \"object\"\n      properties:\n        enabled:\n          type: \"boolean\"\n        bypass:\n          type: \"boolean\"\n        level:\n          type: \"integer\"\n          minimum: 1\n        latencyRangeStart:\n          type: \"integer\"\n        latencyRangeEnd:\n          type: \"integer\"\n    ExceptionAssault:\n      type: \"object\"\n      properties:\n        enabled:\n          type: \"boolean\"\n        bypass:\n          type: \"boolean\"\n        level:\n          type: \"integer\"\n          minimum: 1\n    KillAppAssault:\n      type: \"object\"\n      properties:\n        enabled:\n          type: \"boolean\"\n        bypass:\n          type: \"boolean\"\n        level:\n          type: \"integer\"\n          minimum: 1\n    Service:\n      type: \"object\"\n      properties:\n        serviceId:\n          type: \"string\"\n          description: \"a unique ID for the service across the organization.\"\n          example: \"com.networknt.petstore.v1\"\n        name:\n          type: \"string\"\n          description: \"a logical name of the service.\"\n          example: \"com.networknt.petstore.v1\"\n        tag:\n          type: \"string\"\n          description: \"a list of tags to assign to the service.\"\n        protocol:\n          type: \"string\"\n          description: \"http or https for the server.\"\n        address:\n          type: \"string\"\n          description: \"The address of the service.\"\n        port:\n          type: \"integer\"\n          description: \"The port number of the service\"\n          example: 8080\n        check:\n          $ref: \"#/components/schemas/Check\"\n      required:\n      - \"serviceId\"\n      - \"protocol\"\n      - \"address\"\n      - \"port\"\n    Check:\n      type: \"object\"\n      properties:\n        name:\n          type: \"string\"\n          description: \"The name of the check\"\n        id:\n          type: \"string\"\n          description: \"A unique ID for this check on the node\"\n        interval:\n          type: \"integer\"\n          description: \"The frequency at which to run this check in millisecond\"\n        notes:\n          type: \"string\"\n          description: \"Arbitrary information for humans.\"\n        deregisterCriticalServiceAfter:\n          type: \"integer\"\n          description: \"Check associated with a service should deregister after this\\\n            \\ time in millisecond\"\n        http:\n          type: \"string\"\n          description: \"An HTTP check to perform a GET request against the value of\\\n            \\ HTTP every Interval.\"\n        tlsSkipVerify:\n          type: \"boolean\"\n          description: \"If the certificate for an HTTPS check should not be verified.\"\n      required:\n      - \"id\"\n      - \"interval\"\n      - \"deregisterCriticalServiceAfter\"\n    CheckStatus:\n      type: \"object\"\n      properties:\n        id:\n          type: \"string\"\n          description: \"A unique ID for the check with serviceId, address and port\\\n            \\ combination\"\n        pass:\n          type: \"boolean\"\n          description: \"If the check is passed or failed\"\n        checkInterval:\n          type: \"integer\"\n          description: \"Check interval from the portal-registry configuration to update\\\n            \\ the health\"\n    LoggerConfig:\n      type: \"object\"\n      properties:\n        protocol:\n          type: \"string\"\n          description: \"Target server protocol\"\n        address:\n          type: \"string\"\n          description: \"Target server IP address\"\n        port:\n          type: \"integer\"\n          description: \"Target server port number\"\n        loggers:\n          type: \"array\"\n          description: \"A list of LoggerInfo entries\"\n          items:\n            $ref: \"#/components/schemas/LoggerInfo\"\n      required:\n      - \"protocol\"\n      - \"address\"\n      - \"port\"\n      - \"loggers\"\n    LogRetrieval:\n      type: \"object\"\n      properties:\n        protocol:\n          type: \"string\"\n          description: \"Target server protocol\"\n          enum:\n          - \"http\"\n          - \"https\"\n        address:\n          type: \"string\"\n          description: \"Target server IP address\"\n        port:\n          type: \"integer\"\n          description: \"Target server port number\"\n        loggerName:\n          type: \"string\"\n          description: \"Logger name\"\n        loggerLevel:\n          type: \"string\"\n          description: \"Logger level\"\n          enum:\n          - \"INFO\"\n          - \"DEBUG\"\n          - \"ERROR\"\n          - \"WARN\"\n          - \"TRACE\"\n        startTime:\n          type: \"string\"\n          description: \"Start time\"\n        endTime:\n          type: \"string\"\n          description: \"End time\"\n      required:\n      - \"protocol\"\n      - \"address\"\n      - \"port\"\n    LoggerInfo:\n      type: \"object\"\n      properties:\n        name:\n          type: \"string\"\n          description: \"Name of the logger\"\n        level:\n          type: \"string\"\n          enum:\n          - \"ERROR\"\n          - \"WARN\"\n          - \"INFO\"\n          - \"DEBUG\"\n          - \"TRACE\"\n          description: \"Logging level\"\n      required:\n      - \"name\"\n      - \"level\"\n    Status:\n      type: \"object\"\n      properties:\n        statusCode:\n          type: \"integer\"\n        code:\n          type: \"string\"\n        message:\n          type: \"string\"\n        description:\n          type: \"string\"\n        severity:\n          type: \"string\"\n      required:\n      - \"statusCode\"\n      - \"code\"\n      - \"message\"\n      - \"description\"\n  securitySchemes:\n    portal_auth:\n      type: \"oauth2\"\n      flows:\n        clientCredentials:\n          tokenUrl: \"https://lightapi.net/token\"\n          scopes:\n            portal.w: \"default\"\n","timestamp":1644782923718}
com.networknt.controller-1.0.0net.lightapi.portal.market.ServiceRuleUpdatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":33,"derived":false},"keyId":0,"host":"lightapi.net","serviceId":"com.networknt.controller-1.0.0","endpoint":"/services@post","ruleType":"request-access","rules":[{"ruleId":"controller-register-access","roles":null,"variables":null}],"timestamp":1644787658200}
com.networknt.controller-1.0.0net.lightapi.portal.market.ServiceRuleUpdatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":34,"derived":false},"keyId":0,"host":"lightapi.net","serviceId":"com.networknt.controller-1.0.0","endpoint":"/services@delete","ruleType":"request-access","rules":[{"ruleId":"controller-deregister-access","roles":null,"variables":null}],"timestamp":1644787707749}
com.networknt.controller-1.0.0net.lightapi.portal.market.ServiceRuleUpdatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":116,"derived":false},"keyId":0,"host":"lightapi.net","serviceId":"com.networknt.controller-1.0.0","endpoint":"/services/check@get","ruleType":"request-access","rules":[{"ruleId":"portal-role-access","roles":["CtlPltRead","CtlAppRead"],"variables":null}],"timestamp":1645072259227}
com.networknt.controller-1.0.0net.lightapi.portal.market.ServiceRuleUpdatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":119,"derived":false},"keyId":0,"host":"lightapi.net","serviceId":"com.networknt.controller-1.0.0","endpoint":"/services@get","ruleType":"request-access","rules":[{"ruleId":"portal-role-access","roles":["CtlPltRead","CtlAppRead"],"variables":null}],"timestamp":1645073266300}
com.networknt.config-server-1.0.0net.lightapi.portal.market.MarketServiceCreatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":155,"derived":false},"keyId":0,"host":"lightapi.net","style":"openapi","serviceId":"com.networknt.config-server-1.0.0","value":"{\"style\":\"openapi\",\"status\":\"published\",\"tags\":[\"openapi\",\"configuration\",\"config-server\"],\"host\":\"lightapi.net\",\"lob\":\"portal\",\"serviceId\":\"com.networknt.config-server-1.0.0\",\"name\":\"Configuration Server\",\"desc\":\"A service that serves values.yml and other config files for services during the startup\"}","timestamp":1645156573167}
com.networknt.config-server-1.0.0net.lightapi.portal.market.ServiceSpecUpdatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":156,"derived":false},"keyId":0,"host":"lightapi.net","style":"openapi","serviceId":"com.networknt.config-server-1.0.0","spec":"---\nopenapi: \"3.0.0\"\nservers:\n- description: \"Light Config Server\"\n  url: \"https://config.neworknt.com/config-server\"\ninfo:\n  description: \"Light Config Server API\"\n  version: \"1.0.0\"\n  title: \"Light Config Server API\"\n  contact:\n    email: \"santosh.aherkar@gmail.com\"\ntags:\n- name: \"config-server\"\n  description: \"Operations available in config server\"\npaths:\n  /configs/property/ref:\n    get:\n      tags:\n      - \"config-server\"\n      summary: \"Get reference data to populate the dropdown for property\"\n      operationId: \"getPropertyRef\"\n      description: \"Get property reference data with query parameters\"\n      parameters:\n      - in: \"query\"\n        name: \"name\"\n        description: \"The name of the reference data\"\n        required: true\n        schema:\n          type: \"string\"\n          enum:\n          - \"host\"\n          - \"module\"\n          - \"scope\"\n          - \"key\"\n      - in: \"query\"\n        name: \"host\"\n        description: \"The selected host as parameter for module and scope\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"module\"\n        description: \"The selected module as parameter for scope\"\n        required: false\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"List of key/value map\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/Reference\"\n        \"400\":\n          description: \"Bad Request\"\n  /configs/property/search:\n    post:\n      tags:\n      - \"config-server\"\n      summary: \"Search property key and value pairs with module and optional scope.\"\n      operationId: \"postPropertySearch\"\n      description: \"Search property key and value pairs based on module and scope.\"\n      requestBody:\n        description: \"Search Criteria\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PropertyCriteria\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Returns a list of defined properties in the config server\\\n            \\ per module and optional scope\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/Property\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.r\"\n  /configs/property:\n    post:\n      tags:\n      - \"config-server\"\n      summary: \"Create configs property key.\"\n      operationId: \"postConfigsProperty\"\n      description: \"Create configs property key.\"\n      requestBody:\n        description: \"Property Detail\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Property\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Successfully create configs property key.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Property\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    put:\n      tags:\n      - \"config-server\"\n      summary: \"Update configs property key definition.\"\n      operationId: \"putConfigsProperty\"\n      description: \"Update configs property key defintion.\"\n      requestBody:\n        description: \"Property Detail\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Property\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Returns updated configs property key definition.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Property\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    delete:\n      tags:\n      - \"config-server\"\n      summary: \"Delete configs property key definition.\"\n      operationId: \"deleteConfigProperty\"\n      description: \"Delete configs property key definition.\"\n      parameters:\n      - in: \"query\"\n        name: \"host\"\n        description: \"The host of property\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"module\"\n        description: \"The module of property\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"scope\"\n        description: \"The scope of the property\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"key\"\n        description: \"The key of the property\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"204\":\n          description: \"Successful Delete Configs Property\"\n        \"400\":\n          description: \"Bad request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /configs/global/ref:\n    get:\n      tags:\n      - \"config-server\"\n      summary: \"Get reference data to populate the dropdown for global property\"\n      operationId: \"getConfigsGlobalRef\"\n      description: \"Get configs reference data with query parameters\"\n      parameters:\n      - in: \"query\"\n        name: \"name\"\n        description: \"The name of the reference data\"\n        required: true\n        schema:\n          type: \"string\"\n          enum:\n          - \"project\"\n          - \"projver\"\n          - \"env\"\n      - in: \"query\"\n        name: \"host\"\n        description: \"The selected host as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"module\"\n        description: \"The selected module as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"project\"\n        description: \"The selected project as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"projver\"\n        description: \"The selected project version as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"env\"\n        description: \"The environment as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"List of key/value map\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/Reference\"\n        \"400\":\n          description: \"Bad Request\"\n  /configs/global/search:\n    post:\n      tags:\n      - \"config-server\"\n      summary: \"Search global property key and value pairs with module, project, projver\\\n        \\ and env.\"\n      operationId: \"postGlobalSearch\"\n      description: \"Search global property key and value pairs based on module, project,\\\n        \\ projver and env.\"\n      requestBody:\n        description: \"Search Criteria\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GlobalCriteria\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Returns a list of defined global properties in the config\\\n            \\ server per module, project and env\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/GlobalProperty\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.r\"\n  /configs/global:\n    post:\n      tags:\n      - \"config-server\"\n      summary: \"Create global configs property key and value.\"\n      operationId: \"postConfigsGlobal\"\n      description: \"Create global configs property key and value.\"\n      requestBody:\n        description: \"Property Detail\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GlobalProperty\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Successfully create global configs property key and value.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GlobalProperty\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    put:\n      tags:\n      - \"config-server\"\n      summary: \"Update global configs property key and value.\"\n      operationId: \"putConfigsGlobalProperty\"\n      description: \"Update global configs property key and value.\"\n      requestBody:\n        description: \"Property Detail\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GlobalProperty\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Returns service configs property keys and values.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GlobalProperty\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    delete:\n      tags:\n      - \"config-server\"\n      summary: \"Delete global configs property key and value.\"\n      operationId: \"deleteConfigGlobalProperty\"\n      description: \"Delete global configs property key and value.\"\n      parameters:\n      - in: \"query\"\n        name: \"host\"\n        description: \"The host of property\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"module\"\n        description: \"The module of property\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"project\"\n        description: \"The project of the property\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"projver\"\n        description: \"The project version of the property\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"service\"\n        description: \"The service of the property\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"servver\"\n        description: \"The service version of the property\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"env\"\n        description: \"The environment of the property\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"key\"\n        description: \"The key of the property\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"204\":\n          description: \"Successful Delete Global Configs Property\"\n        \"400\":\n          description: \"Bad request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /files/global/ref:\n    get:\n      tags:\n      - \"config-server\"\n      summary: \"Get reference data to populate the dropdown for global files\"\n      operationId: \"getFilesGlobalRef\"\n      description: \"Get files reference data with query parameters\"\n      parameters:\n      - in: \"query\"\n        name: \"name\"\n        description: \"The name of the reference data\"\n        required: true\n        schema:\n          type: \"string\"\n          enum:\n          - \"host\"\n          - \"module\"\n          - \"project\"\n          - \"projver\"\n          - \"env\"\n      - in: \"query\"\n        name: \"host\"\n        description: \"The selected host as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"module\"\n        description: \"The selected module as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"project\"\n        description: \"The selected project as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"projver\"\n        description: \"The selected project version as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"env\"\n        description: \"The environment as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"List of key/value map\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/Reference\"\n        \"400\":\n          description: \"Bad Request\"\n  /files/global/search:\n    post:\n      tags:\n      - \"config-server\"\n      summary: \"Search global files with module, project, projver and env.\"\n      operationId: \"postGlobalFileSearch\"\n      description: \"Search global files based on module, project, projver and env.\"\n      requestBody:\n        description: \"Search Criteria\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GlobalCriteria\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Returns a list of defined global files in the config server\\\n            \\ per module, project and env\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/GlobalFile\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.r\"\n  /files/global:\n    post:\n      tags:\n      - \"config-server\"\n      summary: \"Create global file.\"\n      operationId: \"postGlobalFile\"\n      description: \"Create global file.\"\n      requestBody:\n        description: \"File Detail\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GlobalFile\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Successfully create global file.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GlobalFile\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    put:\n      tags:\n      - \"config-server\"\n      summary: \"Update global files.\"\n      operationId: \"putGlobalFile\"\n      description: \"Update global file.\"\n      requestBody:\n        description: \"File Detail\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GlobalFile\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Returns global files.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GlobalFile\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    delete:\n      tags:\n      - \"config-server\"\n      summary: \"Delete global files.\"\n      operationId: \"deleteGlobalFile\"\n      description: \"Delete global file.\"\n      parameters:\n      - in: \"query\"\n        name: \"host\"\n        description: \"The host of global file\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"module\"\n        description: \"The module of global file\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"project\"\n        description: \"The project of the global file\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"projver\"\n        description: \"The project version of the global file\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"service\"\n        description: \"The service of the global file\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"servver\"\n        description: \"The service version of the global file\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"env\"\n        description: \"The environment of the global file\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"filename\"\n        description: \"The filename of the global file\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"204\":\n          description: \"Successful Delete Global file\"\n        \"400\":\n          description: \"Bad request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /certs/global/ref:\n    get:\n      tags:\n      - \"config-server\"\n      summary: \"Get reference data to populate the dropdown for global cert\"\n      operationId: \"getCertsGlobalRef\"\n      description: \"Get certs reference data with query parameters\"\n      parameters:\n      - in: \"query\"\n        name: \"name\"\n        description: \"The name of the reference data\"\n        required: true\n        schema:\n          type: \"string\"\n          enum:\n          - \"host\"\n          - \"module\"\n          - \"project\"\n          - \"projver\"\n          - \"env\"\n      - in: \"query\"\n        name: \"host\"\n        description: \"The selected host as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"module\"\n        description: \"The selected module as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"project\"\n        description: \"The selected project as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"projver\"\n        description: \"The selected project version as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"env\"\n        description: \"The environment as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"List of key/value map\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/Reference\"\n        \"400\":\n          description: \"Bad Request\"\n  /certs/global/search:\n    post:\n      tags:\n      - \"config-server\"\n      summary: \"Search global certs with module, project, projver and env.\"\n      operationId: \"postGlobalCertsSearch\"\n      description: \"Search global certs based on module, project, projver and env.\"\n      requestBody:\n        description: \"Search Criteria\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GlobalCriteria\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Returns a list of defined global certs in the config server\\\n            \\ per module, project and env\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/GlobalCert\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.r\"\n  /certs/global:\n    post:\n      tags:\n      - \"config-server\"\n      summary: \"Create global cert.\"\n      operationId: \"postGlobalCert\"\n      description: \"Create global cert.\"\n      requestBody:\n        description: \"Cert Detail\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GlobalCert\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Successfully create global cert.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GlobalCert\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    put:\n      tags:\n      - \"config-server\"\n      summary: \"Update global cert.\"\n      operationId: \"putGlobalCert\"\n      description: \"Update global cert.\"\n      requestBody:\n        description: \"Cert Detail\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GlobalCert\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Returns global cert.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GlobalCert\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    delete:\n      tags:\n      - \"config-server\"\n      summary: \"Delete global cert.\"\n      operationId: \"deleteGlobalCert\"\n      description: \"Delete global cert.\"\n      parameters:\n      - in: \"query\"\n        name: \"host\"\n        description: \"The host of global cert\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"module\"\n        description: \"The module of global cert\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"project\"\n        description: \"The project of the global cert\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"projver\"\n        description: \"The project version of the global cert\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"service\"\n        description: \"The service of the global cert\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"servver\"\n        description: \"The service version of the global cert\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"env\"\n        description: \"The environment of the global cert\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"filename\"\n        description: \"The filename of the global cert\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"204\":\n          description: \"Successful Delete Global cert\"\n        \"400\":\n          description: \"Bad request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /configs/service/ref:\n    get:\n      tags:\n      - \"config-server\"\n      summary: \"Get reference data to populate the dropdown for configs\"\n      operationId: \"getConfigsServiceRef\"\n      description: \"Get configs reference data with query parameters\"\n      parameters:\n      - in: \"query\"\n        name: \"name\"\n        description: \"The name of the reference data\"\n        required: true\n        schema:\n          type: \"string\"\n          enum:\n          - \"project\"\n          - \"projver\"\n          - \"service\"\n          - \"servver\"\n          - \"env\"\n      - in: \"query\"\n        name: \"project\"\n        description: \"The selected project as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"projver\"\n        description: \"The selected project version as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"service\"\n        description: \"The selected service as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"servver\"\n        description: \"The selected service version as a query parameter\"\n        required: false\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"List of key/value map\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/Reference\"\n        \"400\":\n          description: \"Bad Request\"\n  /configs/service/search:\n    post:\n      tags:\n      - \"config-server\"\n      summary: \"Search service entity with module and other parameters.\"\n      operationId: \"postConfigServiceSearch\"\n      description: \"Search service entity based on module and other parameters.\"\n      requestBody:\n        description: \"Search Criteria\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ServiceCriteria\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Returns a list of defined service properties in the config\\\n            \\ server identified by parameters\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/Service\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.r\"\n  /configs/service:\n    post:\n      tags:\n      - \"config-server\"\n      summary: \"Create a new service entity.\"\n      operationId: \"postConfigsService\"\n      description: \"Create a new service entity.\"\n      requestBody:\n        description: \"Service Detail\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Service\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Successfully create a service.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Service\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    put:\n      tags:\n      - \"config-server\"\n      summary: \"Update an existing service entity.\"\n      operationId: \"putConfigsService\"\n      description: \"Update a service entity.\"\n      requestBody:\n        description: \"Service Detail\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Service\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Returns updated service entity.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Service\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    delete:\n      tags:\n      - \"config-server\"\n      summary: \"Delete an existing service entity and all the service properties.\"\n      operationId: \"deleteConfigService\"\n      description: \"Delete a service entity along with properties.\"\n      parameters:\n      - in: \"query\"\n        name: \"sid\"\n        description: \"The id of service\"\n        required: true\n        schema:\n          type: \"integer\"\n      responses:\n        \"204\":\n          description: \"Successful Delete Service\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /configs/service/property:\n    get:\n      tags:\n      - \"config-server\"\n      summary: \"Get all key/value pairs for a particular service\"\n      operationId: \"getConfigsServiceProperty\"\n      description: \"After clicking the detail button on the service list view, this\\\n        \\ endpoint will get all the properties for the service\"\n      parameters:\n      - in: \"query\"\n        name: \"sid\"\n        description: \"host for the service\"\n        required: true\n        schema:\n          type: \"integer\"\n      responses:\n        \"200\":\n          description: \"List of properties for a service\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/ServiceProperty\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.r\"\n    post:\n      tags:\n      - \"config-server\"\n      summary: \"Create a new service property.\"\n      operationId: \"postConfigsServiceProperty\"\n      description: \"Create a new service property.\"\n      requestBody:\n        description: \"Service Property\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ServiceProperty\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Successfully create a service property.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceProperty\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    put:\n      tags:\n      - \"config-server\"\n      summary: \"Update an existing service property.\"\n      operationId: \"putConfigsServiceProperty\"\n      description: \"Update a service property.\"\n      requestBody:\n        description: \"Service Property\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ServiceProperty\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Returns updated service property.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceProperty\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    delete:\n      tags:\n      - \"config-server\"\n      summary: \"Delete an existing service property.\"\n      operationId: \"deleteConfigServiceProperty\"\n      description: \"Delete a service property.\"\n      parameters:\n      - in: \"query\"\n        name: \"sid\"\n        description: \"The sid of service property\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"key\"\n        description: \"The key of the service property\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"204\":\n          description: \"Successful Delete Service Property\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /configs/service/file:\n    get:\n      tags:\n      - \"config-server\"\n      summary: \"Get all files for a particular service\"\n      operationId: \"getConfigsServiceFile\"\n      description: \"After clicking the files button on the service list view, this\\\n        \\ endpoint will get all the files for the service\"\n      parameters:\n      - in: \"query\"\n        name: \"sid\"\n        description: \"sid for the service\"\n        required: true\n        schema:\n          type: \"integer\"\n      responses:\n        \"200\":\n          description: \"List of files for a service\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/ServiceFile\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.r\"\n    post:\n      tags:\n      - \"config-server\"\n      summary: \"Create a new service file.\"\n      operationId: \"postConfigsServiceFile\"\n      description: \"Create a new service file.\"\n      requestBody:\n        description: \"Service File\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ServiceFile\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Successfully create a service file.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceFile\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    put:\n      tags:\n      - \"config-server\"\n      summary: \"Update an existing service file.\"\n      operationId: \"putConfigsServiceFile\"\n      description: \"Update a service file.\"\n      requestBody:\n        description: \"Service File\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ServiceFile\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Returns updated service file.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceFile\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    delete:\n      tags:\n      - \"config-server\"\n      summary: \"Delete an existing service file.\"\n      operationId: \"deleteConfigServiceFile\"\n      description: \"Delete a service file\"\n      parameters:\n      - in: \"query\"\n        name: \"sid\"\n        description: \"The sid of service file\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"filename\"\n        description: \"The filename of the service file\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"204\":\n          description: \"Successful Delete Service File\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /configs/service/cert:\n    get:\n      tags:\n      - \"config-server\"\n      summary: \"Get all certs for a particular service\"\n      operationId: \"getConfigsServiceCert\"\n      description: \"After clicking the certs button on the service list view, this\\\n        \\ endpoint will get all the certs for the service\"\n      parameters:\n      - in: \"query\"\n        name: \"sid\"\n        description: \"sid for the service\"\n        required: true\n        schema:\n          type: \"integer\"\n      responses:\n        \"200\":\n          description: \"List of certs for a service\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/ServiceCert\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.r\"\n    post:\n      tags:\n      - \"config-server\"\n      summary: \"Create a new service cert.\"\n      operationId: \"postConfigsServiceCert\"\n      description: \"Create a new service cert\"\n      requestBody:\n        description: \"Service Cert\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ServiceCert\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Successfully create a service cert.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceCert\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    put:\n      tags:\n      - \"config-server\"\n      summary: \"Update an existing service cert.\"\n      operationId: \"putConfigsServiceCert\"\n      description: \"Update a service cert.\"\n      requestBody:\n        description: \"Service Cert\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ServiceCert\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Returns updated service cert.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceCert\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    delete:\n      tags:\n      - \"config-server\"\n      summary: \"Delete an existing service cert.\"\n      operationId: \"deleteConfigServiceCert\"\n      description: \"Delete a service cert\"\n      parameters:\n      - in: \"query\"\n        name: \"sid\"\n        description: \"The sid of service cert\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"query\"\n        name: \"filename\"\n        description: \"The filename of the service cert\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"204\":\n          description: \"Successful Delete Service Cert\"\n        \"400\":\n          description: \"Bad Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /configs/{project}/{projver}/{service}/{servver}/{env}:\n    get:\n      tags:\n      - \"config-server\"\n      summary: \"Get service configs for the specified project, project version, service,\\\n        \\ service version and environment.\"\n      operationId: \"getServiceConfigs\"\n      description: \"Get service configs for the specified project, project version,\\\n        \\ service, service version and environment.\"\n      parameters:\n      - in: \"path\"\n        name: \"project\"\n        description: \"project name for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"projver\"\n        description: \"Project version for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"service\"\n        description: \"Service name of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"servver\"\n        description: \"Version of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"env\"\n        description: \"Environment of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"Returns service configs for the specified project, project\\\n            \\ version, service, service version and environment.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceConfigs\"\n        \"400\":\n          description: \"bad request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /certs/{project}/{projver}/{service}/{servver}/{env}:\n    get:\n      tags:\n      - \"config-server\"\n      summary: \"Get certificates for the specified project, project version, service,\\\n        \\ service version and environment.\"\n      operationId: \"getServiceCertificates\"\n      description: \"Get certificates for the specified project, project version, service,\\\n        \\ service version and environment. File content is returned as Base64 encoded.\"\n      parameters:\n      - in: \"path\"\n        name: \"project\"\n        description: \"project for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"projver\"\n        description: \"Project version for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"service\"\n        description: \"Service name of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"servver\"\n        description: \"Version of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"env\"\n        description: \"Environment of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"Returns certificates for the specified project, project version,\\\n            \\ service, service version and environment. File content is returned as\\\n            \\ Base64 encoded.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceConfigs\"\n        \"400\":\n          description: \"bad input parameter\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    post:\n      tags:\n      - \"config-server\"\n      summary: \"create config certificates for the specified project, project version,\\\n        \\ service, service version and environment.\"\n      operationId: \"postServiceCertificates\"\n      description: \"create config certificates for the specified project, project\\\n        \\ version, service, service version and environment.\"\n      parameters:\n      - in: \"path\"\n        name: \"project\"\n        description: \"project name for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"projver\"\n        description: \"Project version for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"service\"\n        description: \"Service name of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"servver\"\n        description: \"Version of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"env\"\n        description: \"Environment of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"Successful Create Certificates\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceConfigs\"\n        \"400\":\n          description: \"bad input parameter\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    put:\n      tags:\n      - \"config-server\"\n      summary: \"update config certificates for the specified project, project version,\\\n        \\ service, service version and environment.\"\n      operationId: \"putServiceCertificates\"\n      description: \"update config certificates for the specified project, project\\\n        \\ version, service, service version and environment.\"\n      parameters:\n      - in: \"path\"\n        name: \"project\"\n        description: \"project for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"projver\"\n        description: \"Project version for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"service\"\n        description: \"Service name of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"servver\"\n        description: \"Version of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"env\"\n        description: \"Environment of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"Successful Update Certificates\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceConfigs\"\n        \"400\":\n          description: \"bad input parameter\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    delete:\n      tags:\n      - \"config-server\"\n      summary: \"Delete service certificates for the specified project, project version,\\\n        \\ service, service version and environment.\"\n      operationId: \"deleteServiceCertificates\"\n      description: \"Delete service certificates for the specified project, project\\\n        \\ version, service, service version and environment.\"\n      parameters:\n      - in: \"path\"\n        name: \"project\"\n        description: \"project name for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"projver\"\n        description: \"Project version for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"service\"\n        description: \"Service name of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"servver\"\n        description: \"Version of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"env\"\n        description: \"Environment of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"204\":\n          description: \"Successful Delete Certificates\"\n        \"400\":\n          description: \"Invalid Certificates Delete Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n  /files/{project}/{projver}/{service}/{servver}/{env}:\n    get:\n      tags:\n      - \"config-server\"\n      summary: \"Get config files for the specified project, project version, service,\\\n        \\ service version and environment.\"\n      operationId: \"getServiceFiles\"\n      description: \"Get config files for the specified project, project version, service,\\\n        \\ service version and environment. File content is returned as Base64 encoded.\"\n      parameters:\n      - in: \"path\"\n        name: \"project\"\n        description: \"project for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"projver\"\n        description: \"Project version for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"service\"\n        description: \"Service name of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"servver\"\n        description: \"Version of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"env\"\n        description: \"Environment of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"Returns config files for the specified project, project version,\\\n            \\ service, service version and environment. File content is returned as\\\n            \\ Base64 encoded.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceConfigs\"\n        \"400\":\n          description: \"bad input parameter\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    post:\n      tags:\n      - \"config-server\"\n      summary: \"create config files for the specified project, project version, service,\\\n        \\ service version and environment.\"\n      operationId: \"postServiceFiles\"\n      description: \"create config files for the specified project, project version,\\\n        \\ service, service version and environment.\"\n      parameters:\n      - in: \"path\"\n        name: \"project\"\n        description: \"project for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"projver\"\n        description: \"Project version for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"service\"\n        description: \"Service name of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"servver\"\n        description: \"Version of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"env\"\n        description: \"Environment of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"Successful Create Files\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceConfigs\"\n        \"400\":\n          description: \"bad input parameter\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    put:\n      tags:\n      - \"config-server\"\n      summary: \"update config files for the specified project, project version, service,\\\n        \\ service version and environment.\"\n      operationId: \"putServiceFiles\"\n      description: \"update config files for the specified project, project version,\\\n        \\ service, service version and environment.\"\n      parameters:\n      - in: \"path\"\n        name: \"project\"\n        description: \"project name for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"projver\"\n        description: \"Project version for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"service\"\n        description: \"Service name of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"servver\"\n        description: \"Version of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"env\"\n        description: \"Environment of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"Successful Update Certificates\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceConfigs\"\n        \"400\":\n          description: \"bad input parameter\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\n    delete:\n      tags:\n      - \"config-server\"\n      summary: \"Delete service files for the specified project, project version, service,\\\n        \\ service version and environment.\"\n      operationId: \"deleteServiceFiles\"\n      description: \"Delete service files for the specified project, project version,\\\n        \\ service, service version and environment.\"\n      parameters:\n      - in: \"path\"\n        name: \"project\"\n        description: \"project name for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"projver\"\n        description: \"Project version for the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"service\"\n        description: \"Service name of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"servver\"\n        description: \"Version of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      - in: \"path\"\n        name: \"env\"\n        description: \"Environment of the registered service\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"204\":\n          description: \"Successful Delete Certificates\"\n        \"400\":\n          description: \"Invalid Certificates Delete Request\"\n      security:\n      - portal_auth:\n        - \"portal.w\"\ncomponents:\n  securitySchemes:\n    portal_auth:\n      type: \"oauth2\"\n      flows:\n        clientCredentials:\n          tokenUrl: \"https://lightapi.net/token\"\n          scopes:\n            portal.w: \"default\"\n            portal.w: \"write\"\n            portal.r: \"read\"\n  schemas:\n    Reference:\n      type: \"object\"\n      additionalProperties: true\n    PropertyCriteria:\n      type: \"object\"\n      properties:\n        host:\n          type: \"string\"\n          description: \"Host of the properties\"\n        module:\n          type: \"string\"\n          description: \"Module of the properties\"\n        scope:\n          type: \"string\"\n          description: \"Scope of the properties\"\n    Property:\n      type: \"object\"\n      required:\n      - \"host\"\n      - \"module\"\n      - \"scope\"\n      - \"key\"\n      - \"order\"\n      properties:\n        host:\n          type: \"string\"\n          description: \"Host of the property\"\n        module:\n          type: \"string\"\n          description: \"Module of the property\"\n        scope:\n          type: \"string\"\n          description: \"Scope of the property\"\n        key:\n          type: \"string\"\n          description: \"Key of the property\"\n        order:\n          type: \"integer\"\n          description: \"Order of the property\"\n    GlobalCriteria:\n      type: \"object\"\n      required:\n      - \"host\"\n      - \"module\"\n      properties:\n        host:\n          type: \"string\"\n          description: \"Host of the properties\"\n        module:\n          type: \"string\"\n          description: \"Module of the properties\"\n        project:\n          type: \"string\"\n          description: \"Project of the properties\"\n        projver:\n          type: \"string\"\n          description: \"Project version of the properties\"\n        env:\n          type: \"string\"\n          description: \"Environment of the properties\"\n    GlobalProperty:\n      type: \"object\"\n      required:\n      - \"host\"\n      - \"module\"\n      - \"key\"\n      - \"value\"\n      properties:\n        host:\n          type: \"string\"\n          description: \"Host of the property\"\n        module:\n          type: \"string\"\n          description: \"Module of the property\"\n        project:\n          type: \"string\"\n          description: \"Project of the property\"\n        projver:\n          type: \"string\"\n          description: \"Project version of the property\"\n        service:\n          type: \"string\"\n          description: \"Service of the property\"\n        servver:\n          type: \"string\"\n          description: \"Service version version of the property\"\n        env:\n          type: \"string\"\n          description: \"Environment of the property\"\n        key:\n          type: \"string\"\n          description: \"Key of the property\"\n        value:\n          type: \"string\"\n          description: \"Value of the property\"\n    GlobalFile:\n      type: \"object\"\n      required:\n      - \"host\"\n      - \"module\"\n      - \"filename\"\n      properties:\n        host:\n          type: \"string\"\n          description: \"Host of the global file\"\n        module:\n          type: \"string\"\n          description: \"Module of the global file\"\n        project:\n          type: \"string\"\n          description: \"Project of the global file\"\n        projver:\n          type: \"string\"\n          description: \"Project version of the global file\"\n        service:\n          type: \"string\"\n          description: \"Service of the global file\"\n        servver:\n          type: \"string\"\n          description: \"Service version version of the global file\"\n        env:\n          type: \"string\"\n          description: \"Environment of the global file\"\n        filename:\n          type: \"string\"\n          description: \"File name of the global file\"\n    GlobalCert:\n      type: \"object\"\n      required:\n      - \"host\"\n      - \"module\"\n      - \"filename\"\n      properties:\n        host:\n          type: \"string\"\n          description: \"Host of the global cert\"\n        module:\n          type: \"string\"\n          description: \"Module of the global cert\"\n        project:\n          type: \"string\"\n          description: \"Project of the global cert\"\n        projver:\n          type: \"string\"\n          description: \"Project version of the global cert\"\n        service:\n          type: \"string\"\n          description: \"Service of the global cert\"\n        servver:\n          type: \"string\"\n          description: \"Service version version of the global cert\"\n        env:\n          type: \"string\"\n          description: \"Environment of the global cert\"\n        filename:\n          type: \"string\"\n          description: \"File name of the global cert\"\n    ServiceCriteria:\n      type: \"object\"\n      required:\n      - \"host\"\n      - \"module\"\n      properties:\n        host:\n          type: \"string\"\n          description: \"Host of the properties\"\n        module:\n          type: \"string\"\n          description: \"Module of the properties\"\n        project:\n          type: \"string\"\n          description: \"Project of the properties\"\n        projver:\n          type: \"string\"\n          description: \"Project version of the properties\"\n        service:\n          type: \"string\"\n          description: \"Service of the properties\"\n        servver:\n          type: \"string\"\n          description: \"Service version of the properties\"\n        env:\n          type: \"string\"\n          description: \"Environment of the properties\"\n    ServiceProperty:\n      type: \"object\"\n      required:\n      - \"sid\"\n      - \"key\"\n      - \"value\"\n      properties:\n        sid:\n          type: \"integer\"\n          description: \"Sid of the property\"\n        key:\n          type: \"string\"\n          description: \"Key of the property\"\n        value:\n          type: \"string\"\n          description: \"Value of the property\"\n    ServiceFile:\n      type: \"object\"\n      required:\n      - \"sid\"\n      - \"filename\"\n      properties:\n        sid:\n          type: \"integer\"\n          description: \"Sid of the file\"\n        filename:\n          type: \"string\"\n          description: \"Filename of the file\"\n    ServiceCert:\n      type: \"object\"\n      required:\n      - \"sid\"\n      - \"filename\"\n      properties:\n        sid:\n          type: \"integer\"\n          description: \"Sid of the cert\"\n        filename:\n          type: \"string\"\n          description: \"Filename of the cert\"\n    Service:\n      type: \"object\"\n      required:\n      - \"host\"\n      - \"module\"\n      - \"project\"\n      - \"projver\"\n      - \"service\"\n      - \"servver\"\n      - \"env\"\n      properties:\n        host:\n          type: \"string\"\n          description: \"Host for identifying the service\"\n        module:\n          type: \"string\"\n          description: \"Module for identifying the service\"\n        project:\n          type: \"string\"\n          description: \"Project for identifying the service\"\n        projver:\n          type: \"string\"\n          description: \"Project version for identfying the service\"\n        service:\n          type: \"string\"\n          description: \"Service name for identifying the service\"\n        servver:\n          type: \"string\"\n          description: \"Service version for identifying the service\"\n        env:\n          type: \"string\"\n          description: \"Environment for identifying the service\"\n        sid:\n          type: \"integer\"\n          description: \"Id for identifying the service\"\n    ServiceConfigs:\n      type: \"object\"\n      required:\n      - \"service\"\n      properties:\n        service:\n          $ref: \"#/components/schemas/Service\"\n        configProperties:\n          type: \"object\"\n          description: \"Key-Value pairs of the config properties\"\n          additionalProperties: true\n","timestamp":1645156742662}
com.networknt.config-server-1.0.0net.lightapi.portal.market.ServiceRuleUpdatedEvent{"EventId":{"id":"stevehu@gmail.com","nonce":160,"derived":false},"keyId":0,"host":"lightapi.net","serviceId":"com.networknt.config-server-1.0.0","endpoint":"/config-server/configs/property@delete","ruleType":"request-access","rules":[{"ruleId":"portal-role-access","roles":["CfgPltAdmin"],"variables":null}],"timestamp":1645158081743}
