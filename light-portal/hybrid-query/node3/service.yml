# Singleton service factory configuration/IoC injection
singletons:
- com.networknt.registry.URL:
  - com.networknt.registry.URLImpl:
      parameters:
        com.networknt.portal.hybrid.query-1.0.0: https://hybrid-query1:8440,https://hybrid-query2:8441,https://hybrid-query3:8442
        com.networknt.oauth-key-1.0.0: https://oauth-key:6886
        com.networknt.oauth-token-1.0.0: https://oauth-token:6882
- com.networknt.registry.Registry:
  - com.networknt.registry.support.DirectRegistry
- com.networknt.balance.LoadBalance:
  - com.networknt.balance.RoundRobinLoadBalance
- com.networknt.cluster.Cluster:
  - com.networknt.cluster.LightCluster
# StartupHookProvider implementations, there are one to many and they are called in the same sequence defined.
- com.networknt.server.StartupHookProvider:
  # registry all service handlers by from annotations
  - com.networknt.rpc.router.RpcStartupHookProvider
  # - com.networknt.jaeger.tracing.JaegerStartupHookProvider
  # User Query Startup Hook
  - net.lightapi.portal.user.query.UserQueryStartup
  # Covid Query Startup Hook
  # - net.lightapi.portal.covid.query.CovidQueryStartup
  # Market Query Startup Hook
  - net.lightapi.portal.market.query.MarketQueryStartup
  # database startup hook to initialize datasource and cache.
  - net.lightapi.portal.db.SqlDbStartupHook
# ShutdownHookProvider implementations, there are one to many and they are called in the same sequence defined.
- com.networknt.server.ShutdownHookProvider:
  # User Query Shutdown Hook
  - net.lightapi.portal.user.query.UserQueryShutdown
  # Covid Query Shutdown Hook
  # - net.lightapi.portal.covid.query.CovidQueryShutdown
  # Market Query Shutdown Hook
  - net.lightapi.portal.market.query.MarketQueryShutdown
# Schema Registry client implementation
- io.confluent.kafka.schemaregistry.client.SchemaRegistryClient:
  - com.networknt.kafka.common.LightSchemaRegistryClient
