# server.yml
server.httpsPort: 8439
server.serviceId: com.networknt.portal.hybrid.command-1.0.0
# overwrite environment tag to simplify the service discovery.
server.environment: null

# client.yml
client.verifyHostname: false
client.tokenAcClientId: f7d42348-c647-4efb-a52d-4c5787421e73
client.tokenCcClientId: f7d42348-c647-4efb-a52d-4c5787421e73
client.tokenRtClientId: f7d42348-c647-4efb-a52d-4c5787421e73
client.tokenKeyClientId: f7d42348-c647-4efb-a52d-4c5787421e73
client.signClientId: f7d42348-c647-4efb-a52d-4c5787421e73
client.signKeyClientId: f7d42348-c647-4efb-a52d-4c5787421e73
client.derefClientId: f7d42348-c647-4efb-a52d-4c5787421e73
client.injectOpenTracing: true

# kafka-producer.yml
kafka-producer.bootstrap.servers: localhost:9092
kafka-producer.schema.registry.url: http://localhost:8081

# portal.yml
portal.sendEmail: true
portal.cmdHost: https://localhost:8439
portal.resetHost: https://devsignin.lightapi.net
portal.admin: steve.hu@lightapi.net

# cors.yml
cors.enabled: true
cors.allowedOrigins:
  - https://localhost:3000
  - https://dev.lightapi.net
cors.allowedMethods:
  - GET
  - POST
  - PUT
  - DELETE


# direct-registry.yml
direct-registry.directUrls:
  com.networknt.portal.hybrid.query-1.0.0: https://localhost:8440,https://localhost:8441,https://localhost:8442
  com.networknt.portal.hybrid.command-1.0.0: https://localhost:8439
  com.networknt.oauth-kafka-1.0.0: https://localhost:6881
  com.networknt.reference-1.0.0: https://localhost:2498

# service.yml
service.singletons:
- com.networknt.registry.URL:
  - com.networknt.registry.URLImpl
- com.networknt.registry.Registry:
  - com.networknt.registry.support.DirectRegistry
- com.networknt.balance.LoadBalance:
  - com.networknt.balance.RoundRobinLoadBalance
- com.networknt.cluster.Cluster:
  - com.networknt.cluster.LightCluster
# StartupHookProvider implementations, there are one to many and they are called in the same sequence defined.
- com.networknt.server.StartupHookProvider:
  # registry all service handlers by from annotations
  - com.networknt.rpc.router.RpcStartupHookProvider
  # - com.networknt.jaeger.tracing.JaegerStartupHookProvider
  # If you are using mask module to remove sensitive info before logging, uncomment the following line.
  # - com.networknt.server.JsonPathStartupHookProvider
  # Kafka producer hook
  - net.lightapi.portal.command.HybridCommandStartup
# ShutdownHookProvider implementations, there are one to many and they are called in the same sequence defined.
- com.networknt.server.ShutdownHookProvider:
  - net.lightapi.portal.command.HybridCommandShutdown
# Kafka Producer instance
- com.networknt.kafka.producer.NativeLightProducer:
  - com.networknt.kafka.producer.SidecarProducer
# Schema Registry client implementation
- io.confluent.kafka.schemaregistry.client.SchemaRegistryClient:
  - com.networknt.kafka.common.LightSchemaRegistryClient

# security.yml
security.enableVerifyJwt: false

# cache.yml
cache.caches:
  - cacheName: jwt
    expiryInMinutes: 15
    maxSize: 100
  - cacheName: jwk
    expiryInMinutes: 129600
    maxSize: 100
  - cacheName: portal-data
    expiryInMinutes: 60
    maxSize: 1000
  - cacheName: auth_code
    expiryInMinutes: 5
    maxSize: 1000
